{"ast":null,"code":"import paths from './config.json';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AppHttpService = /*#__PURE__*/(() => {\n  class AppHttpService {\n    constructor(http) {\n      this.http = http;\n      this.defUrl = \"/api/\";\n    } //productos\n\n\n    obtenerProductos() {\n      console.log(\"path:\", paths.obtenerProductos);\n      return this.http.get(paths.obtenerProductos);\n    }\n\n    crearProducto(body) {\n      return this.http.post(paths.crearProducto, body);\n    }\n\n    obtenerProductoId(Id) {\n      var path = paths.obtenerProductoId + Id;\n      return this.http.get(path);\n    }\n\n    actualizarProducto(Id, body) {\n      var path = paths.actualizarProducto + Id;\n      return this.http.put(path, body);\n    } //pedidos\n\n\n    crearPedido(body) {\n      console.log(\"ssss\");\n      return this.http.post(paths.crearPedido, body);\n    }\n\n    obtenerPedidos() {\n      return this.http.get(paths.obtenerPedidos);\n    }\n\n    obtenerPedidoEstadoPr() {\n      ///api/getPedidosEstado/:estado\n      return this.http.get(paths.obtenerPedidoEstado + \"Preparando\");\n    } // \"updatePedidoEstado\":\"/api/updatePedidoEstado\",\n\n\n    actualizarPedidoEstado(body) {\n      let path = paths.actualizarPedidoEstado;\n      return this.http.post(path, body);\n    }\n\n    obtenerPedido2DiasT(body) {\n      var inicio = body[0];\n      var final = body[1];\n      var path = paths.obtenerPedidos2D + inicio + \"/\" + final;\n      return this.http.get(path);\n    }\n\n    obtenerPedido2DiasCli(body) {\n      var inicio = body[0];\n      var final = body[1];\n      var cli = body[2];\n      var path = paths.obtenerPedidos2DCli + inicio + \"/\" + final + \"/\" + cli;\n      return this.http.get(path);\n    }\n\n    obtenerPedido1DiaCli(body) {\n      var fecha = body[0];\n      var cli = body[1];\n      var path = paths.obtenerPedidoFechaNit + fecha + \"/\" + cli;\n      console.log(path);\n      return this.http.get(path);\n    }\n\n    obtenerPedidosCliente(nitCliente) {\n      let path = paths.obtenerPedidosCliente + nitCliente;\n      return this.http.get(path);\n    } //compras\n\n\n    obtenerCompras() {\n      ///api/getPedidosEstado/:estado\n      return this.http.get(paths.obtenerPedidoEstado + \"Preparando\");\n    } ///elementos\n\n\n    obtenerIngredientes() {\n      return this.http.get(paths.obtenerIngredientes);\n    }\n\n    obtenerBien() {\n      return this.http.get(paths.obtenerBienes);\n    }\n\n    obtenerElementos() {\n      return this.http.get(paths.obtenerElementos);\n    }\n\n    obtenerElementoId(id) {\n      var path = paths.obtenerElementoId + id;\n      return this.http.get(path);\n    }\n\n    crearElemento(body) {\n      return this.http.post(paths.crearElemento, body);\n    }\n\n    eliminarElemento(id) {\n      var path = paths.eliminarElemento + id;\n      return this.http.delete(path);\n    }\n\n    actualizarElemento(id, body) {\n      var path = paths.actualizarElemento + id;\n      return this.http.put(path, body);\n    }\n\n    actualizarElemAgregarInv(id, body) {\n      var path = paths.actualizarElemAgregarInv + id + \"/agregarInv\";\n      return this.http.put(path, body);\n    } //categoria\n\n\n    crearCategoria(body) {\n      return this.http.post(paths.crearCategoria, body);\n    }\n\n    obtenerCategorias() {\n      console.log(paths.obtenerCategorias);\n      return this.http.get(paths.obtenerCategorias);\n    }\n\n    obtenerProdCatNombre(nombreCat) {\n      var path = paths.obtenerProdCatNombre + nombreCat + '/productos';\n      return this.http.get(path);\n    }\n\n    eliminarCategoria(idCat) {\n      var path = paths.eliminarCategoria + idCat;\n      return this.http.delete(path);\n    }\n\n    actualizarCategoria(idCat, cat) {\n      var path = paths.actualizarCategoria + idCat;\n      return this.http.put(path, cat);\n    }\n\n  }\n\n  AppHttpService.ɵfac = function AppHttpService_Factory(t) {\n    return new (t || AppHttpService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AppHttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppHttpService,\n    factory: AppHttpService.ɵfac,\n    providedIn: 'root'\n  });\n  return AppHttpService;\n})();","map":null,"metadata":{},"sourceType":"module"}